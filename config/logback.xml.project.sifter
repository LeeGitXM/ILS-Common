<<<<<<< HEAD
<configuration scan="true" scanPeriod="60 seconds">
=======
<configuration debug="true" scan="true" scanPeriod="60 seconds">
>>>>>>> master
  <!--
    This version of the logging configuration is meant to be used when project-specific
	log files are desired but the ils-common module is not installed, that is, there
	is no desire for database logs or the crash reporter

    See  https://logback.qos.ch/manual/configuration.html for hints on the makeup of this file
        NOTE: Any com.ils.common.log classes must be inserted into catapult.jar as logging is
		      initialized on early startup.
  -->
  <!-- This ends up in the wrapper.log -->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  <!-- This ends up in the SQLite database and is displayed in the Gateway -->
  <appender name="DB" class="com.inductiveautomation.logging.SQLiteAppender">
    <dir>logs</dir>
    <!--
      Maintenance Settings
      entryLimit: The maximum number of entries in the database. However, at any given time, there may be more than this number, due to how cleanup works.
      maxEventsPerMaintenance: The number of event that can happen before a maintenance cycle occurs.
      minTimeBetweenMaintenance: The minimum time (max frequency) between maintenance events. Takes precedent over max events.
      vacuumFrequency: The number of maintenance cycles before a "vacuum" is performed, to recover disk space.

      On disk, most log events are between 600-800 bytes.
    <entryLimit>50000</entryLimit>
    <maxEventsPerMaintenance>5000</maxEventsPerMaintenance>
    <minTimeBetweenMaintenance>60000</minTimeBetweenMaintenance>
    <vacuumFrequency>3</vacuumFrequency>
    -->
  </appender>

<<<<<<< HEAD
  <!-- An appender for a common log file that wraps monthly
       Daily rollover. Path must match the one in the file element or else
       the rollover logs are placed in the working directory. -->
       Each file keeps 30 days' worth of history
   -->
  <!--
  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>logs/ils.log</file>
=======
  <!-- An appender for a common log file that wraps by size and time (daily).
       Path must match the one in the file element or else
       the rollover logs are placed in the working directory. -->
   -->
  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>logs/wrapper.log</file>
>>>>>>> master
  	<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        <fileNamePattern>log_%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
	</rollingPolicy>
    <encoder>
<<<<<<< HEAD
          <pattern>%d{HH:mm:ss.SSS} %level %logger{35} %msg%n</pattern>
    </encoder>
  </appender>
  -->
=======
          <pattern>%d{yyyy/MM/dd HH:mm:ss.SSS} %level %logger{35} %msg%n</pattern>
    </encoder>
  </appender>
>>>>>>> master

  <!-- An appender that sifts based on project. Individual projects roll over daily.
       Prudent mode allows several JVMs to write to the same files
  	   Daily rollover. Path must match the one in the file element or else
       the rollover logs are placed in the working directory. 
  -->
  <appender name="SIFT" class="ch.qos.logback.classic.sift.SiftingAppender">
    <discriminator>
      	<defaultValue>unknown</defaultValue>
	<key>project</key>
    </discriminator>
    <sift>
<<<<<<< HEAD
      <appender name="FILE-${project}" class="ch.qos.logback.core.FileAppender">
        <file>logs/${project}.log</file>
  	    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>log_%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>5MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
                <maxHistory>3</maxHistory>
		</rollingPolicy>
    	<prudent>true</prudent>
        <encoder>
          <pattern>%d{HH:mm:ss.SSS} %level %logger{35} %msg%n</pattern>
         </encoder>
      </appender>
     </sift>
   </appender>

  <root name="ROOT" level="info">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="DB" />
    <appender-ref ref="SIFT" />
  </root>

  <logger name="org.apache" level="INFO"></logger>
  <logger name="com" level="INFO" additivity="false">
    <appender-ref ref="SIFT" />
  </logger>
=======
	  <appender name="FILE-${project}" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/${project}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			  <fileNamePattern>logs/${project}_%i.log</fileNamePattern>
			  <minIndex>1</minIndex>
			  <maxIndex>5</maxIndex>
		</rollingPolicy>
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>5MB</maxFileSize>
		</triggeringPolicy>
		<!--  This whole thing fails when prudent is true
    	<prudent>true</prudent>
		-->
        <encoder>
          <pattern>%d{yyyy/MM/dd HH:mm:ss.SSS} %level %logger{35} %msg%n</pattern>
         </encoder>
      </appender>
	  
    </sift>
  </appender>

  <!-- Define appenders to be added to the root logger -->
  <root level="info">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="DB" />
    <appender-ref ref="FILE" />
    <appender-ref ref="SIFT" />
  </root>

>>>>>>> master
</configuration>
