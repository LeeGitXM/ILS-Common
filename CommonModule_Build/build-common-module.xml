<!-- The "ILS Common Module" is fundamentally a logging add-on featuring an appender that sends
     logging events to a database table to be used for all sorts of advanced filtering.
     Additionally the module provides a simple configuration mechanism for context-sensitive help.
 -->
<project name="ILSModuleBuilder" basedir="../" default="BuildAndInstallModule">

	<import file="${basedir}/CommonModule_Build/build.xml"/>

	<property name="version.build" value="1" />	
	<!-- Change version.beta value to "" for release builds -->
	<property name="version.beta" value="-development" />		
	<property name="CommonModule.version" value="1.1.0.${version.build}" />
	<property name="CommonModule.name" value="CommonModule" />
	<property name="CommonModule.release" value="0.5" />
	<property name="CommonModule.description" value="ILS Common Module" />
	<property name="root.dir" value="${basedir}/.." />
	<property name="external.dir" value="${root.dir}/external/lib" />
	<property name="sdk.dir" value="${root.dir}/ignition-79/lib" />
	<property name="common.jar.name" value="ils-common.jar" />
	<property name="common.module.jar.name" value="common-module-common.jar" />
	<property name="common.bin.dir" value="${root.dir}/ils-common/bin" />
	<property name="common.src.dir" value="${root.dir}/ils-common/ILS_Common/src" />
	<property name="common.module.src.dir" value="${root.dir}/ils-common/CommonModule_Common/src" />

	
	<property name="ant.build.javac.source" value="1.8"/>
	<property name="ant.build.javac.target" value="1.8"/>
		
	<!-- External jar classpath -->
	<path id="ils-classpath">
	   <fileset dir="${external.dir}">
	      <include name="*.jar"/>
	   </fileset>
		<fileset dir="${sdk.dir}">
			 <include name="*.jar"/>
		</fileset>
	   <pathelement path="${build.dir}"/>
	</path>
	
	<!-- Common jar classpath -->
	<!--    Classpath needed to build the common code, when complete, it will contain ils-common.jar -->
	<path id="CommonModule_Common.classpath">
		<path refid="ignition-sdk.classpath" />
		<path refid="ExternalJar.classpath" />
	</path>
	
	<!-- The gateway, designer and clients depend on the Common -->
	<!-- Gateway jar classpath -->
	<path id="CommonModule_Gateway.classpath">
		<fileset dir="${basedir}/CommonModule_Build/bin/CommonModule_Common/dist/" includes="*.jar" />
		<path refid="CommonModule_Common.classpath" />
	</path>	
	<!-- Client jar classpath -->
	<path id="CommonModule_Client.classpath">
		<fileset dir="${basedir}/CommonModule_Build/bin/CommonModule_Common/dist/" includes="*.jar" />
		<path refid="CommonModule_Common.classpath" />
	</path>
	
	<!-- Designer jar classpath -->
	<path id="CommonModule_Designer.classpath">
		<path refid="CommonModule_Common.classpath" />
		<fileset dir="${basedir}/CommonModule_Build/bin/CommonModule_Common/dist/" includes="*.jar" />
		<fileset dir="${basedir}/CommonModule_Build/bin/${CommonModule.name}_Client/dist/" includes="*.jar" />
	</path>
	
	<!-- This target will build the toolkit module and deploy it to the local Ignition gateway -->
		<target name="BuildAndInstallModule" depends="clean, build, deploy" />
	
	<!-- Clean ILS common -->
	<target name="clean.common" >
		<mkdir dir="${common.bin.dir}"/>
		<delete file="${external.dir}/${common.jar.name}" />
		<delete file="${external.dir}/${common.jar.name}.pack.gz" />
		<delete file="${external.dir}/ils-common-j7.jar" />
		<delete>
		    <fileset dir="${common.bin.dir}">
		        <include name="**/*.class"/>
		    	<include name="**/*.png"/>
		    </fileset>
		</delete>
	</target>

	<!-- Cleans all previously built files (leaves doc) -->
	<target name="clean" depends="clean.common" description="Remove existing build products" >
		<delete dir="${basedir}/CommonModule_Build/bin" />
		<delete file="${basedir}/CommonModule_Build/modules/${CommonModule.name}-module-unsigned.modl" />
		<delete dir="${basedir}/CommonModule_Build/release" />
		<delete dir="${basedir}/CommonModule_Build/temp_modl" />   
	</target>	
	
	
	<!-- Compile the Common library -->
	<target name="common.build" description="Compile ILS Common in 2 trees">
		<echo  message="Using Java version ${ant.java.version}."/>
		<mkdir dir="${common.bin.dir}/images"/>
		<javac destdir="${common.bin.dir}" debug="true" target="1.8" includeantruntime="false">
			<src path="${common.src.dir}"/>
			<classpath refid="CommonModule_Common.classpath"/>
		</javac>
		<copy todir="${common.bin.dir}/images" >
			<fileset dir="${common.src.dir}/images"/>
		</copy>
		<echo  message="Using Java version ${ant.java.version}."/>
		<mkdir dir="${common.bin.dir}/images"/>
		<javac destdir="${common.bin.dir}" debug="true" target="1.8" includeantruntime="false">
			<src path="${common.module.src.dir}"/>
			<classpath refid="CommonModule_Common.classpath"/>
		</javac>
		<copy todir="${common.bin.dir}/images" >
			<fileset dir="${common.src.dir}/images"/>
		</copy>
	</target>

	<!-- Builds the toolkit module jars and the final .modl file -->
	<target name="build" depends="common.build" description="Compile the source">
		<echo message="${CommonModule.name} ${CommonModule.version}" />	
		<delete dir="${basedir}/CommonModule_Build/temp_modl" />	
		
		<!-- build.date and version.build are both defined in build.xml -->
		<echo message="Build date: ${build.date}" />
		<echo message="Build version: ${version.build}" />	
			
		<!-- Common Module Common jar -->
		<jar destfile="${basedir}/CommonModule_Build/bin/${CommonModule.name}_Common/dist/${common.module.jar.name}">
			<fileset dir="${common.bin.dir}" />
		</jar>
		
		<!-- Common Module Gateway jar -->
		<antcall target="MakeProject">
			<param name="modName" value="${CommonModule.name}_Gateway" />
			<param name="sourceDirFolder" value="${CommonModule.name}_Gateway" />
			<param name="jarName" value="common-module-gateway" />
			<param name="javacSource" value="1.8" />
			<param name="[replace]LoggingGateway.properties:Meta.Version" value="${version.build}" />
			<param name="[replace]LoggingGateway.properties:Meta.ReleaseDate" value="${build.date}" />
			<param name="module.build.classpath" value="${CommonModule.name}_Gateway.classpath"/>
		</antcall>

		<!-- Common Module Client jar -->
		<antcall target="MakeProject">
			<param name="modName" value="${CommonModule.name}_Client" />
			<param name="sourceDirFolder" value="${CommonModule.name}_Client" />
			<param name="jarName" value="common-module-client" />
			<param name="javacSource" value="1.8" />
			<param name="module.build.classpath" value="${CommonModule.name}_Client.classpath"/>
		</antcall>
		
		<!-- Common Module Designer jar -->
		<antcall target="MakeProject">
			<param name="modName" value="${CommonModule.name}_Designer" />
			<param name="sourceDirFolder" value="${CommonModule.name}_Designer" />
			<param name="jarName" value="common-module-designer" />
			<param name="javacSource" value="1.8" />
			<param name="module.build.classpath" value="${CommonModule.name}_Designer.classpath"/>
		</antcall>
		
		<!-- Create .modl file -->
		<echo message="Making ${CommonModule.name} modl" />

		<mkdir dir="${basedir}/CommonModule_Build/temp_modl" />
		<mkdir dir="${basedir}/CommonModule_Build/modules" />
		

		<copy file="${basedir}/CommonModule_Build/common-module.xml" tofile="${basedir}/CommonModule_Build/temp_modl/module.xml" overwrite="true" />

		<replace file="${basedir}/CommonModule_Build/temp_modl/module.xml" token="@NAME@" value="${CommonModule.name}" />
		<replace file="${basedir}/CommonModule_Build/temp_modl/module.xml" token="@DESCRIPTION@" value="${CommonModule.description}" />
		<replace file="${basedir}/CommonModule_Build/temp_modl/module.xml" token="@VERSION@" value="${CommonModule.version}" />

		<!-- Pack200 and then copy the designer, client jars -->
		<pack200 src="${basedir}/CommonModule_Build/bin/${CommonModule.name}_Common/dist/common-module-common.jar" destfile="${basedir}/CommonModule_Build/temp_modl/common-module-common.jar.pack.gz" gzipoutput="true" configfile="${p200props}" />
		<pack200 src="${basedir}/CommonModule_Build/bin/${CommonModule.name}_Client/dist/common-module-client.jar" destfile="${basedir}/CommonModule_Build/temp_modl/common-module-client.jar.pack.gz" gzipoutput="true" configfile="${p200props}" />
		<pack200 src="${basedir}/CommonModule_Build/bin/${CommonModule.name}_Designer/dist/common-module-designer.jar" destfile="${basedir}/CommonModule_Build/temp_modl/common-module-designer.jar.pack.gz" gzipoutput="true" configfile="${p200props}" />
		
		<!-- Copy gateway jar -->
		<copy file="${basedir}/CommonModule_Build/bin/${CommonModule.name}_Gateway/dist/common-module-gateway.jar" todir="${basedir}/CommonModule_Build/temp_modl/" />
		<copy file="${basedir}/CommonModule_Build/bin/${CommonModule.name}_Common/dist/${common.module.jar.name}" todir="${basedir}/CommonModule_Build/temp_modl/" />

		<!-- Copy license file into the bundle -->
		<copy file="${basedir}/CommonModule_Build/license.html" todir="${basedir}/CommonModule_Build/temp_modl/" />
		
		<!-- Echo the version into .version in the bundle and to be saved -->
		<echo message="${CommonModule.name}-${CommonModule.version}" file="${basedir}/CommonModule_Build/temp_modl/.version" append="false"/>
		<echo message="${CommonModule.name}-${CommonModule.version}:${CommonModule.release}" file="${basedir}/CommonModule_Build/.version" append="false"/>
		
		<!-- Zip it all up -->
		<zip zipfile="${basedir}/CommonModule_Build/modules/${CommonModule.name}-module-unsigned.modl" basedir="${basedir}/CommonModule_Build/temp_modl" />
		
		<!-- Sign the module jar -->
		<antcall target="SignModule">
			<param name="moduleName" value="${CommonModule.name}-${CommonModule.version}" />
			<param name="modulein"   value="${basedir}/CommonModule_Build/modules/${CommonModule.name}-module-unsigned.modl" />
			<param name="moduleout"  value="${basedir}/CommonModule_Build/modules/${CommonModule.name}-module-signed.modl"/>
		</antcall>
	</target>

	<!-- Installs ILS Common module in local Ignition gateway. Note that the gateway must be running for this to succeed. -->
	<target name="deploy" depends="build" >
		<echo message="Installing ${CommonModule.name} on Ignition Gateway." />
		<postmodule posturl="${local.gateway.url}" modulefile="${basedir}/CommonModule_Build/modules/${CommonModule.name}-module-signed.modl" />
	</target>	

</project>
